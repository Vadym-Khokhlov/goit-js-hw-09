{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAoBpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,qBAAoCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAElDM,EAAO,oBAAmCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,SAEjDA,MA5BPS,QAAQC,IAAIf,EAAKK,MAAMW,OACvBhB,EAAKiB,iBAAiB,UAEtB,SAAuBC,GACrBA,EAAEC,iBAMF,IAJA,IAAIC,EAAaC,OAAOrB,EAAKK,MAAMW,OAC7BM,EAAYD,OAAOrB,EAAKuB,KAAKP,OAC7BQ,EAAkBH,OAAOrB,EAAKyB,OAAOT,OAElCU,EAAI,EAAGA,EAAIF,EAAiBE,GAAK,EAAG,CAE3CvB,EADiBuB,EAAI,EACGN,GACrBO,MAAK,SAAAjB,G,OAAWZ,EAAA8B,OAAOC,QAAQnB,MAC/BoB,OAAM,SAAAnB,G,OAAUb,EAAA8B,OAAOG,QAAQpB,MAElCS,GAAcE,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\nconsole.log(form.delay.value);\nform.addEventListener('submit', formSubmitter);\n\nfunction formSubmitter(e) {\n  e.preventDefault();\n\n  let firstDelay = Number(form.delay.value);\n  const stepDelay = Number(form.step.value);\n  const promiseQuantity = Number(form.amount.value);\n\n  for (let i = 0; i < promiseQuantity; i += 1) {\n    const position = i + 1;\n    createPromise(position, firstDelay)\n      .then(resolve => Notify.success(resolve))\n      .catch(reject => Notify.failure(reject));\n\n    firstDelay += stepDelay;\n  }\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","console","log","value","addEventListener","e","preventDefault","firstDelay","Number","stepDelay","step","promiseQuantity","amount","i","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.738d1e35.js.map"}